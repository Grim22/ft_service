server {
        listen 80;
	#IPV6 config
        listen [::]:80;
        
	server_name _;
        
	#where to look for sites content
	root /var/www/localhost/htdocs;
	
	#different types of index files that should be looked for:
        index index.php index.html index.htm index.nginx-debian.html;
	#if no index file, display autoindex
	#autoindex on;

        # SSL configuration
        #listen 443 ssl;
	#IPV6 config
        #listen [::]:443 ssl;
		
	#ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    	#ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

	#how to process requests ending with "/"
	location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ /index.php?$query_string;
        }
        # You may need this to prevent return 404 recursion.
         location = /404.html {
          internal;
         }
        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
               #try_files $uri /index.php =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass   127.0.0.1:9000;
                fastcgi_index  index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
